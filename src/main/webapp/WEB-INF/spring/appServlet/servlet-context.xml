<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.co.Dodam" />
	
	<beans:bean id="MemberDAO" class="com.co.Dodam.Dao.MemberDAO"/>
	<beans:bean id="plantsDAO" class="com.co.Dodam.Dao.listDAO"/>
	<beans:bean id="MainDAO" class="com.co.Dodam.Dao.DiaryDAO" />
	<beans:bean id="GardenDAO" class="com.co.Dodam.Dao.GardenDAO"/>
	<beans:bean id="AndroidDAO" class="com.co.Dodam.Dao.AndroidDAO"/>
	<beans:bean id="AndroidListDAO" class="com.co.Dodam.Dao.AndroidListDAO"/>
	<beans:bean id="BoardListDAO" class="com.co.Dodam.Dao.BoardDAO"/>
	
	<mongo:mongo-client
		replica-set="cluster0-shard-00-02.u4wd4.mongodb.net:27017,cluster0-shard-00-01.u4wd4.mongodb.net:27017,cluster0-shard-00-00.u4wd4.mongodb.net:27017"
		credentials="dodamdodam:dodamdodam@admin">
		<mongo:client-options connections-per-host="8"
			threads-allowed-to-block-for-connection-multiplier="4"
			connect-timeout="10000" max-wait-time="15000" socket-keep-alive="true" ssl="true"
			socket-timeout="15000" />
	</mongo:mongo-client>

	<beans:bean id="mongoTemplate"
		class="org.springframework.data.mongodb.core.MongoTemplate">
		<beans:constructor-arg ref="mongo" />
		<beans:constructor-arg name="databaseName"
			value="dodamdodam"></beans:constructor-arg>
	</beans:bean>
	


	<!-- upload -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath = new String("업로드 경로") -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<!-- 파일업로드 디렉토리 -->
		<beans:constructor-arg
			value="src/main/webapp/resources/upload/*" />
	</beans:bean>
	
	<!-- Gmail -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<beans:property name="host" value="smtp.gmail.com" />
	<beans:property name="port" value="587" />
	<beans:property name="username" value="puheary@gmail.com" />
	<beans:property name="password" value="dodamdodam" />
	<beans:property name="javaMailProperties">
	<beans:props>
	<beans:prop key="mail.smtp.auth">true</beans:prop>
	<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
	</beans:props>
	</beans:property>
	</beans:bean>
	
	
	
</beans:beans>
